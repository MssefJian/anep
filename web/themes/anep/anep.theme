<?php declare(strict_types = 1);

use Drupal\Core\Url;

/**
 * @file
 * Functions to support theming in the anep theme.
 */

/**
 * Implements hook_preprocess_HOOK() for html.html.twig.
 */
function anep_preprocess_html(array &$variables): void {

}

/**
 * Implements hook_preprocess_HOOK() for page.html.twig.
 */
function anep_preprocess_page(array &$variables): void {

}

/**
 * Implements hook_preprocess_HOOK() for node.html.twig.
 */
function anep_preprocess_node(array &$variables): void {

}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 *
 * Add views template suggestions.
 *
 * @inheritdoc
 */
function anep_theme_suggestions_views_view_alter(array &$suggestions, array $variables) {
  $suggestions[] = 'views_view__' . $variables['view']->id();
}

/**
 * Implements hook_theme_suggestions_alter() for contact form container.
 */
function anep_theme_suggestions_container_alter(array &$suggestions, array &$variables)
{
  $name = '';
  $type = '';
  if (isset($variables['element']['#name'])) {
    $name = $variables['element']['#name'];
  }

  if (isset($variables['element']['#type'])) {
    $type = $variables['element']['#type'];
  }

  array_unshift($suggestions, 'container__' . $type . '__' . $name);
}

/**
 * Implements hook_theme_suggestions_alter() for contact form container.
 */
function anep_theme_suggestions_off_canvas_page_wrapper_alter(array &$suggestions, array &$variables)
{
  $name = '';
  $type = '';
  if (isset($variables['element']['#name'])) {
    $name = $variables['element']['#name'];
  }

  if (isset($variables['element']['#type'])) {
    $type = $variables['element']['#type'];
  }

  array_unshift($suggestions, 'off_canvas_page_wrapper' . $type . '__' . $name);
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 *
 * Add views unformatted template suggestions.
 *
 * @inheritdoc
 */
function anep_theme_suggestions_views_view_unformatted_alter(array &$suggestions, array $variables) {
  $suggestions[] = 'views_view_unformatted__' . $variables['view']->id();
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 *
 * Add views grid template suggestions.
 *
 * @inheritdoc
 */
function anep_theme_suggestions_views_view_grid_alter(array &$suggestions, array $variables) {
  $suggestions[] = 'views_view_grid__' . $variables['view']->id();
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 *
 * Add views fields template suggestions.
 *
 * @inheritdoc
 */
function anep_theme_suggestions_views_view_fields_alter(array &$suggestions, array $variables) {
  $suggestions[] = 'views_view_fields__' . $variables['view']->id();
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 *
 * Add views field template suggestions.
 *
 * @inheritdoc
 */
function anep_theme_suggestions_views_view_field_alter(array &$suggestions, array $variables) {
  $suggestions[] = 'views_view_field__' . $variables['view']->id();
}

/**
 * Implements hook_preprocess_views_view_fields().
 */
function anep_preprocess_views_view_fields(&$variables) {
  // Add classes to media rendered entity field so it can be targeted for
  // JavaScript mouseover and click events.
  $types = ['project', 'tenders'];
  if (in_array($variables['view']->id(), $types)) {
  $row = $variables['row'];
  $nid = $row->_entity->id();
  $node = \Drupal\node\Entity\Node::load($nid);

  if ($node) {
    // Get the URL alias for the node.
    $url_alias = \Drupal::service('path_alias.manager')->getAliasByPath('/node/' . $node->id());

    // Create a URL object from the URL alias.
    $url = Url::fromUri('internal:' . $url_alias);

    // Get the generated URL string.
    $node_path = $url->toString();

    // Print the node path.
    $variables['fields']['c_link'] = $node_path;
  }

  }
}
